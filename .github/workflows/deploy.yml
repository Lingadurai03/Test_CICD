name: CI/CD Pipeline

on:
  push:
    branches:
      - stage
      - main
  pull_request:
    branches:
      - stage
      - main
  workflow_dispatch:

jobs:
  # ---------------------
  # Reusable setup steps
  # ---------------------
  build:
    runs-on: ubuntu-latest
    steps: &setup
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js (from .nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

  # ---------------------
  # Linting Job
  # ---------------------
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - *setup
      - name: Run ESLint
        run: npm run lint --if-present

  # ---------------------
  # Testing Job
  # ---------------------
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - *setup
      - name: Run tests
        run: npm test

  # ---------------------
  # Security Scan: npm audit
  # ---------------------
  security:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - *setup
      - name: Run npm audit
        run: npm audit --audit-level=high || true

  # ---------------------
  # Security Scan: Gitleaks
  # ---------------------
  gitleaks:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Gitleaks (secret scanning)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-banner --redact

  # ---------------------
  # Security Scan: CodeQL
  # ---------------------
  codeql:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # ---------------------
  # Deploy Job
  # ---------------------
  deploy:
    runs-on: ubuntu-latest
    needs: [security, gitleaks, codeql]
    env:
      VERCEL_STAGE_HOOK: ${{ secrets.VERCEL_STAGE_HOOK }}
      VERCEL_PROD_HOOK: ${{ secrets.VERCEL_PROD_HOOK }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Deploy to Vercel
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "ðŸš€ Deploying to PRODUCTION..."
            curl -X POST "$VERCEL_PROD_HOOK"
            DEPLOY_ENV="PRODUCTION"
          elif [[ "${GITHUB_REF##*/}" == "stage" ]]; then
            echo "ðŸš€ Deploying to STAGING..."
            curl -X POST "$VERCEL_STAGE_HOOK"
            DEPLOY_ENV="STAGING"
          fi

          # âœ… Send Slack notification
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"âœ… Deployment to *$DEPLOY_ENV* from branch \`${GITHUB_REF##*/}\` is complete!\"}" \
          $SLACK_WEBHOOK_URL
